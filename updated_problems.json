{
  "problems": [
    {
      "description": "Write a program that prints 'Hello, World!' to the standard output.",
      "difficulty": "Easy",
      "examples": [
        {
          "input": "",
          "output": "Hello, World!"
        }
      ],
      "functionName": "hello_world",
      "functionTemplate": {
        "c": "void hello_world() {\n    printf(\"Hello, World!\\n\");\n}",
        "cpp": "void helloWorld() {\n    std::cout << \"Hello, World!\" << std::endl;\n}",
        "java": "static void helloWorld() {\n    System.out.println(\"Hello, World!\");\n}",
        "python": "def hello_world():"
      },
      "languageTemplates": {
        "python": {
          "template": "{{code}}\n\nif __name__ == '__main__':\n    print({{functionName}}({{inputs}}))"
        },
        "cpp": {
          "template": "#include <iostream>\nusing namespace std;\n{{code}}\n\nint main() {\n    cout << {{functionName}}({{inputs}}) << endl;\n    return 0;\n}"
        },
        "java": {
          "template": "public class Main {\n    {{code}}\n    public static void main(String[] args) {\n        System.out.println({{functionName}}({{inputs}}));\n    }\n}"
        },
        "c": {
          "template": "#include <stdio.h>\n{{code}}\n\nint main() {\n    printf(\"%d\", {{functionName}}({{inputs}}));\n    return 0;\n}"
        },
        "javascript": {
          "template": "{{code}}\n\nconsole.log({{functionName}}({{inputs}}));"
        }
      },
      "id": 0,
      "tags": [
        "Basics",
        "Output"
      ],
      "testCases": [
        {
          "expectedOutput": "Hello, World!",
          "id": 1,
          "input": [],
          "name": "basic"
        }
      ],
      "title": "Print Hello World"
    },
    {
      "constraints": [
        "-10⁶ ≤ a, b ≤ 10⁶"
      ],
      "description": "Given two integers, print their sum.",
      "difficulty": "Easy",
      "examples": [
        {
          "input": "a = 2, b = 3",
          "output": "5"
        },
        {
          "input": "a = -1, b = 1",
          "output": "0"
        }
      ],
      "functionName": "add",
      "functionTemplate": {
        "c": "void add(int a, int b) {\n    printf(\"%d\\n\", a + b);\n}",
        "cpp": "void add(int a, int b) {\n    std::cout << a + b << std::endl;\n}",
        "java": "static void add(int a, int b) {\n    System.out.println(a + b);\n}",
        "python": "def add(a, b):\n    print(a + b)"
      },
      "languageTemplates": {
        "python": {
          "template": "{{code}}\n\nif __name__ == '__main__':\n    print({{functionName}}({{inputs}}))"
        },
        "cpp": {
          "template": "#include <iostream>\nusing namespace std;\n{{code}}\n\nint main() {\n    cout << {{functionName}}({{inputs}}) << endl;\n    return 0;\n}"
        },
        "java": {
          "template": "public class Main {\n    {{code}}\n    public static void main(String[] args) {\n        System.out.println({{functionName}}({{inputs}}));\n    }\n}"
        },
        "c": {
          "template": "#include <stdio.h>\n{{code}}\n\nint main() {\n    printf(\"%d\", {{functionName}}({{inputs}}));\n    return 0;\n}"
        },
        "javascript": {
          "template": "{{code}}\n\nconsole.log({{functionName}}({{inputs}}));"
        }
      },
      "id": 1,
      "tags": [
        "Math"
      ],
      "testCases": [
        {
          "expectedOutput": "5",
          "id": 1,
          "input": [
            "2",
            "3"
          ],
          "name": "positive"
        },
        {
          "expectedOutput": "0",
          "id": 2,
          "input": [
            "-1",
            "1"
          ],
          "name": "negative"
        },
        {
          "expectedOutput": "0",
          "id": 3,
          "input": [
            "0",
            "0"
          ],
          "name": "zeros"
        },
        {
          "expectedOutput": "1000000",
          "id": 4,
          "input": [
            "999999",
            "1"
          ],
          "name": "large"
        }
      ],
      "title": "Add Two Numbers"
    },
    {
      "constraints": [
        "-10⁶ ≤ n ≤ 10⁶"
      ],
      "description": "Given an integer n, print 'Even' if it is even, or 'Odd' if it is odd.",
      "difficulty": "Easy",
      "examples": [
        {
          "input": "n = 4",
          "output": "Even"
        },
        {
          "input": "n = 7",
          "output": "Odd"
        }
      ],
      "functionName": "check_even_odd",
      "functionTemplate": {
        "c": "void check_even_odd(int n) {\n    printf(\"%s\\n\", (n % 2 == 0) ? \"Even\" : \"Odd\");\n}",
        "cpp": "void checkEvenOdd(int n) {\n    std::cout << (n % 2 == 0 ? \"Even\" : \"Odd\") << std::endl;\n}",
        "java": "static void checkEvenOdd(int n) {\n    System.out.println(n % 2 == 0 ? \"Even\" : \"Odd\");\n}",
        "python": "def check_even_odd(n):\n    print(\"Even\" if n % 2 == 0 else \"Odd\")"
      },
      "languageTemplates": {
        "python": {
          "template": "{{code}}\n\nif __name__ == '__main__':\n    print({{functionName}}({{inputs}}))"
        },
        "cpp": {
          "template": "#include <iostream>\nusing namespace std;\n{{code}}\n\nint main() {\n    cout << {{functionName}}({{inputs}}) << endl;\n    return 0;\n}"
        },
        "java": {
          "template": "public class Main {\n    {{code}}\n    public static void main(String[] args) {\n        System.out.println({{functionName}}({{inputs}}));\n    }\n}"
        },
        "c": {
          "template": "#include <stdio.h>\n{{code}}\n\nint main() {\n    printf(\"%d\", {{functionName}}({{inputs}}));\n    return 0;\n}"
        },
        "javascript": {
          "template": "{{code}}\n\nconsole.log({{functionName}}({{inputs}}));"
        }
      },
      "id": 2,
      "tags": [
        "Math",
        "Conditional"
      ],
      "testCases": [
        {
          "expectedOutput": "Even",
          "id": 1,
          "input": [
            "4"
          ],
          "name": "even"
        },
        {
          "expectedOutput": "Odd",
          "id": 2,
          "input": [
            "7"
          ],
          "name": "odd"
        },
        {
          "expectedOutput": "Even",
          "id": 3,
          "input": [
            "0"
          ],
          "name": "zero"
        },
        {
          "expectedOutput": "Even",
          "id": 4,
          "input": [
            "-6"
          ],
          "name": "negative even"
        },
        {
          "expectedOutput": "Odd",
          "id": 5,
          "input": [
            "-9"
          ],
          "name": "negative odd"
        }
      ],
      "title": "Check Even or Odd"
    }
  ]
}